name: Deploy to Staging

on:
  push:
    branches:
      - main
    paths:
      - "broadcaster/**"
      - "todo app/**"
      - "todo-backend/**"

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: git-operations-staging-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect Changed Applications
    runs-on: ubuntu-latest
    outputs:
      broadcaster-changed: ${{ steps.changes.outputs.broadcaster }}
      todo-app-changed: ${{ steps.changes.outputs.todo-app }}
      todo-backend-changed: ${{ steps.changes.outputs.todo-backend }}
      any-changed: ${{ steps.changes.outputs.any }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        id: changes
        run: |
          # Get the list of changed files
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Initialize flags
          BROADCASTER_CHANGED=false
          TODO_APP_CHANGED=false
          TODO_BACKEND_CHANGED=false

          # Check if each app directory has changes
          if echo "$CHANGED_FILES" | grep -q "^broadcaster/"; then
            BROADCASTER_CHANGED=true
            echo "Broadcaster has changes"
          else
            echo "Broadcaster has no changes"
          fi

          if echo "$CHANGED_FILES" | grep -q "^todo app/"; then
            TODO_APP_CHANGED=true
            echo "Todo-app has changes"
          else
            echo "Todo-app has no changes"
          fi

          if echo "$CHANGED_FILES" | grep -q "^todo-backend/"; then
            TODO_BACKEND_CHANGED=true
            echo "Todo-backend has changes"
          else
            echo "Todo-backend has no changes"
          fi

          # Set outputs
          echo "broadcaster=$BROADCASTER_CHANGED" >> $GITHUB_OUTPUT
          echo "todo-app=$TODO_APP_CHANGED" >> $GITHUB_OUTPUT
          echo "todo-backend=$TODO_BACKEND_CHANGED" >> $GITHUB_OUTPUT

          # Set any-changed flag
          if [[ "$BROADCASTER_CHANGED" == "true" || "$TODO_APP_CHANGED" == "true" || "$TODO_BACKEND_CHANGED" == "true" ]]; then
            echo "any=true" >> $GITHUB_OUTPUT
          else
            echo "any=false" >> $GITHUB_OUTPUT
          fi

  build-broadcaster:
    name: Build Broadcaster
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.broadcaster-changed == 'true'
    outputs:
      image-tag: ${{ steps.build.outputs.image-tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: GCP Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud --quiet auth configure-docker us-central1-docker.pkg.dev

      - name: Build and Push Image
        id: build
        run: |
          IMAGE_TAG="us-central1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/my-repository/broadcaster:${{ github.sha }}"
          docker build -t $IMAGE_TAG "./broadcaster"
          docker push $IMAGE_TAG
          echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

  build-todo-app:
    name: Build Todo App
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.todo-app-changed == 'true'
    outputs:
      image-tag: ${{ steps.build.outputs.image-tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: GCP Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud --quiet auth configure-docker us-central1-docker.pkg.dev

      - name: Build and Push Image
        id: build
        run: |
          IMAGE_TAG="us-central1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/my-repository/todo-app:${{ github.sha }}"
          docker build -t $IMAGE_TAG "./todo app"
          docker push $IMAGE_TAG
          echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

  build-todo-backend:
    name: Build Todo Backend
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.todo-backend-changed == 'true'
    outputs:
      image-tag: ${{ steps.build.outputs.image-tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: GCP Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud --quiet auth configure-docker us-central1-docker.pkg.dev

      - name: Build and Push Image
        id: build
        run: |
          IMAGE_TAG="us-central1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/my-repository/todo-backend:${{ github.sha }}"
          docker build -t $IMAGE_TAG "./todo-backend"
          docker push $IMAGE_TAG
          echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy:
    name: Update GitOps Configuration
    runs-on: ubuntu-latest
    needs:
      [detect-changes, build-broadcaster, build-todo-app, build-todo-backend]
    # Wait for all build jobs to complete (whether successful or skipped)
    if: |
      always() && 
      needs.detect-changes.outputs.any-changed == 'true' &&
      needs.detect-changes.result == 'success' &&
      (needs.build-broadcaster.result == 'success' || needs.build-broadcaster.result == 'skipped') &&
      (needs.build-todo-app.result == 'success' || needs.build-todo-app.result == 'skipped') &&
      (needs.build-todo-backend.result == 'success' || needs.build-todo-backend.result == 'skipped')

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Verify build completion
        run: |
          echo "Build job results:"
          echo "- Broadcaster: ${{ needs.build-broadcaster.result }}"
          echo "- Todo App: ${{ needs.build-todo-app.result }}"
          echo "- Todo Backend: ${{ needs.build-todo-backend.result }}"
          echo ""
          echo "All required builds have completed. Proceeding with GitOps update..."

      - name: Update kustomization files
        run: |
          cd project-gitops-config-repo || { echo "GitOps repo directory not found"; exit 1; }

          # Update broadcaster if it was built
          if [[ "${{ needs.detect-changes.outputs.broadcaster-changed }}" == "true" ]]; then
            if [ -f "apps/broadcaster/overlays/staging/kustomization.yaml" ]; then
              cd apps/broadcaster/overlays/staging
              kustomize edit set image broadcaster=us-central1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/my-repository/broadcaster:${{ github.sha }}
              echo "Updated broadcaster kustomization"
              cd ../../../../
            else
              echo "Warning: broadcaster kustomization file not found"
            fi
          fi

          # Update todo-app if it was built
          if [[ "${{ needs.detect-changes.outputs.todo-app-changed }}" == "true" ]]; then
            if [ -f "apps/todo-app/overlays/staging/kustomization.yaml" ]; then
              cd apps/todo-app/overlays/staging
              kustomize edit set image todo-app=us-central1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/my-repository/todo-app:${{ github.sha }}
              echo "Updated todo-app kustomization"
              cd ../../../../
            else
              echo "Warning: todo-app kustomization file not found"
            fi
          fi

          # Update todo-backend if it was built
          if [[ "${{ needs.detect-changes.outputs.todo-backend-changed }}" == "true" ]]; then
            if [ -f "apps/todo-backend/overlays/staging/kustomization.yaml" ]; then
              cd apps/todo-backend/overlays/staging
              kustomize edit set image todo-backend=us-central1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/my-repository/todo-backend:${{ github.sha }}
              echo "Updated todo-backend kustomization"
              cd ../../../../
            else
              echo "Warning: todo-backend kustomization file not found"
            fi
          fi

      - name: Commit and push changes
        run: |
          cd project-gitops-config-repo
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Deploy changed apps to staging - Commit: ${{ github.sha }}"
            git push origin main
            echo "Successfully pushed changes to GitOps repository"
          fi
